services:
 mysql-container:
  image: mysql:latest
  environment:
   MYSQL_ROOT_PASSWORD: admin
  ports:
   - 3306:3306
  volumes:
   - ./mysql-init:/docker-entrypoint-initdb.d
  networks:
   - products-mysql-network

 products-microservice:
  build:
   context: ../eCommerceSolution.ProductService
   dockerfile: ProductsMicroService.API/Dockerfile
  image: ecommerce-solution.product-service:v1.0.0
  environment:
   MYSQL_HOST: mysql-container
   MYSQL_PASSWORD: admin
   MYSQL_USER: root
   MYSQL_DATABASE: ecommerceproductsdatabase
   MYSQL_PORT: 3306
  ports:
   - 6001:8080
  networks:
   - ecommerce-network
   - products-mysql-network
  depends_on:
   - mysql-container
  
 postgres-container:
  image: postgres:latest
  environment:
   POSTGRES_USER: postgres
   POSTGRES_PASSWORD: admin
   POSTGRES_DB: eCommerceUsers
  ports:
   - 5432:5432
  volumes:
   - ./postgres-init:/docker-entrypoint-initdb.d
  networks:
   - users-postgres-network
  
 users-microservice:
  build:
   context: ../eCommerceSolution.UsersService
   dockerfile: eCommerce.API/Dockerfile
  image: ecommerce-solution.user-service:v1.0.0
  environment:
   POSTGRES_HOST: postgres-container
   POSTGRES_PASSWORD: admin
   POSTGRES_USER: postgres
   POSTGRES_DATABASE: eCommerceUsers
   POSTGRES_PORT: 5432
  ports:
   - 5000:8080
  networks:
   - ecommerce-network
   - users-postgres-network
  depends_on:
   - postgres-container

 mongodb-container:
  image: mongo:latest
  ports:
   - 27017:27017
  volumes:
   - ./mongodb-init:/docker-entrypoint-initdb.d
  networks:
   - orders-mongodb-network

 orders-microservice:
  build:
   context: ../eCommerceSolution.OrdersService
   dockerfile: OrdersMicroservice.API/Dockerfile
  image: ecommerce-solution.order-service:v1.0.0
  environment:
   MONGO_HOST: mongodb-container
   MONGO_PORT: 27017
   MONGO_DATABASE: OrdersDatabase
   UsersMicroserviceName: users-microservice
   UsersMicroservicePort: 8080
   ProductsMicroserviceName: products-microservice
   ProductsMicroservicePort: 8080
  ports:
   - 7000:8080
  networks:
   - ecommerce-network
   - orders-mongodb-network
  depends_on:
   - mongodb-container

networks:
 ecommerce-network:
  driver: bridge
 orders-mongodb-network:
  driver: bridge
 products-mysql-network:
  driver: bridge
 users-postgres-network:
  driver: bridge